name: running unit tests
on: [push]
jobs:
  unit-tests:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Cache dotnet
        id: cache-dotnet
        uses: actions/cache@v3.2.6
        with:
          path: ~/.dotnet
          key: ${{ runner.os }}-dotnet-setup
      - if: steps.cache-dotnet.outputs.cache-hit != 'true'
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 7.0.x
      - run: dotnet restore
      - run: dotnet build


      - if: ${{ runner.os == 'Linux' }}
        name: download ffmpeg for Linux
        uses: robinraju/release-downloader@v1.6
        with:
          repository: BtbN/FFmpeg-Builds
          # latest: true
          tag: latest
          fileName: ffmpeg-n5.1-latest-linux64-gpl-shared-5.1.tar.xz
      - if: ${{ runner.os == 'Linux' }}
        name: move lib ffmpeg for Linux
        run: |
          tar -xvf ffmpeg-*-latest-linux64-gpl-shared*.tar.xz
          cp -r ffmpeg-*-latest-linux64-gpl-shared*/lib/* tests/SharpMusic.DllHellPTests/bin/Debug/net7.0

      - if: ${{ runner.os == 'Windows' }}
        name: download ffmpeg for Windows
        uses: robinraju/release-downloader@v1.6
        with:
          repository: BtbN/FFmpeg-Builds
          # latest: true
          tag: latest
          fileName: ffmpeg-n5.1-latest-win64-gpl-shared-5.1.zip
      - if: ${{ runner.os == 'Windows' }}
        name: move lib ffmpeg for Windows
        run: |
          tar -xf ffmpeg-n5.1-latest-win64-gpl-shared-5.1.zip
          cp -r ffmpeg-n5.1-latest-win64-gpl-shared-5.1/bin/* tests/SharpMusic.DllHellPTests/bin/Debug/net7.0


      - run: dotnet test --settings coverlet.runsettings
      - name: Codecov
        uses: codecov/codecov-action@v3.1.1
        with:
          directory: coverlet.collected
